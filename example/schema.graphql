directive @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE

input AddBookInput {
  clientMutationId: String
  title: String!
  author: String!
}

type AddBookPayload {
  clientMutationId: String
  book: Book
}

type Book {
  id: ID!
  title: String!
  author: String!
  shelf: Shelf!
  status: BookStatus
}

type BookCollection {
  id: ID!
  books: [Book!]!
}

type BookConnection {
  edges: [BookEdge]!
  pageInfo: PageInfo!
}

type BookEdge {
  cursor: String!
  node: Book!
}

enum BookStatus {
  Draft
  Published
  Discontinued
}

enum CacheControlScope {
  PUBLIC
  PRIVATE
}

input DeleteBookInput {
  clientMutationId: String
  id: ID!
}

type DeleteBookPayload {
  clientMutationId: String
  deleted: Boolean!
}

type Mutation {
  addBook(input: AddBookInput!): AddBookPayload!
  deleteBook(input: DeleteBookInput!): DeleteBookPayload!
  updateBook(input: UpdateBookInput!): UpdateBookPayload!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  endCursor: String
  startCursor: String
}

type Query {
  book(id: ID!): Book
  books(status: BookStatus): [Book!]!
  booksPaginated(first: Int, after: String): BookConnection
  fromShelf(shelfId: ID!): [ShelfContent!]
}

type Shelf {
  id: ID!
  name: String!
  contents: [ShelfContent!]!
}

union ShelfContent = Book | BookCollection

type Subscription {
  bookAdded: Book!
}

input UpdateBookInput {
  clientMutationId: String
  id: ID!
  title: String!
  author: String!
  status: BookStatus
}

type UpdateBookPayload {
  clientMutationId: String
  book: Book
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

